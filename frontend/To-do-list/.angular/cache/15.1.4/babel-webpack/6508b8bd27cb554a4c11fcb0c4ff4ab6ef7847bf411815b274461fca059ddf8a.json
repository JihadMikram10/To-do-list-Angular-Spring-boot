{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TaskService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiBaseUrl;\n  }\n  addTask(task) {\n    let params = new HttpParams();\n    params = params.append(localStorage.getItem('email'), params);\n    return this.http.post(`${this.apiUrl}/add-task` + params + '', task);\n  }\n}\nTaskService.ɵfac = function TaskService_Factory(t) {\n  return new (t || TaskService)(i0.ɵɵinject(i1.HttpClient));\n};\nTaskService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TaskService,\n  factory: TaskService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAAA,SAAqBA,UAAU,QAAQ,sBAAsB;AAG7D,SAASC,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,WAAM,GAAGH,WAAW,CAACI,UAAU;EAEA;EAEhCC,OAAO,CAACC,IAAU;IACvB,IAAIC,MAAM,GAAQ,IAAIR,UAAU,EAAE;IAClCQ,MAAM,GAAGA,MAAM,CAACC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAEH,MAAM,CAAC;IAE7D,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAO,GAAG,IAAI,CAACC,MAAM,WAAW,GAAGL,MAAM,GAAG,EAAE,EAAED,IAAI,CAAC;EAC5E;;AAVWL,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAY,SAAXZ,WAAW;EAAAa,YAFV;AAAM","names":["HttpParams","environment","TaskService","constructor","http","apiBaseUrl","addTask","task","params","append","localStorage","getItem","post","apiUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Angular\\To-do-list\\src\\app\\shared\\services\\task.service.ts"],"sourcesContent":["import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { Task } from '../interface/task';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TaskService {\n  private apiUrl = environment.apiBaseUrl;\n  email!: any;\n  constructor(private http: HttpClient) {}\n\n  public addTask(task: Task): Observable<Task> {\n    let params: any = new HttpParams();\n    params = params.append(localStorage.getItem('email'), params);\n\n    return this.http.post<Task>(`${this.apiUrl}/add-task` + params + '', task);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}