{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/app/shared/services/task.service\";\nexport class AddTaskComponent {\n  constructor(dialogRef, fb, taskservices) {\n    this.dialogRef = dialogRef;\n    this.fb = fb;\n    this.taskservices = taskservices;\n  }\n  ngOnInit() {\n    this.formtask = this.fb.group({\n      description: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n      status: ['', [Validators.required]],\n      email: [localStorage.getItem('email'), [Validators.required]]\n    });\n  }\n  addtask() {\n    let e = this.formtask.value;\n    let eToSave = {\n      description: e.description,\n      created_date: e.date,\n      status: e.status,\n      email: e.email\n    };\n    this.taskservices.addTask(eToSave).subscribe(() => {\n      console.log(this.formtask.value);\n    });\n  }\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\nAddTaskComponent.ɵfac = function AddTaskComponent_Factory(t) {\n  return new (t || AddTaskComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.TaskService));\n};\nAddTaskComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddTaskComponent,\n  selectors: [[\"app-add-task\"]],\n  decls: 26,\n  vars: 1,\n  consts: [[1, \"mt-4\", \"me-5\", \"ms-5\", 3, \"formGroup\"], [1, \"form-check\", \"d-flex\", \"justify-content-center\"], [1, \"mb-4\"], [1, \"form-label\"], [\"type\", \"text\", \"placeholder\", \"Task Description...\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"row\"], [1, \"col-5\", \"me-4\"], [\"for\", \"form3Example3\", 1, \"form-label\"], [\"formControlName\", \"status\", \"aria-label\", \"Default select example\", 1, \"form-select\"], [\"selected\", \"\", \"value\", \"Still in Progress\"], [1, \"col-5\", \"ms-4\"], [\"type\", \"date\", \"id\", \"start\", \"name\", \"trip-start\", \"min\", \"2023-02-02\", \"formControlName\", \"date\", 1, \"form-control\"], [1, \"form-check\", \"d-flex\", \"justify-content-center\", \"mt-4\", \"mb-2\"], [1, \"btn\", \"btn-danger\", \"me-4\", 3, \"click\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AddTaskComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0)(1, \"div\", 1)(2, \"h3\");\n      i0.ɵɵtext(3, \"Add Task\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \" Add Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"div\", 6)(10, \"div\", 2)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"select\", 8)(14, \"option\", 9);\n      i0.ɵɵtext(15, \"Still in Progress\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"div\", 2)(18, \"label\", 7);\n      i0.ɵɵtext(19, \"Creation_Date\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(20, \"input\", 11);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(21, \"div\", 12)(22, \"button\", 13);\n      i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_button_click_22_listener() {\n        return ctx.closeDialog();\n      });\n      i0.ɵɵtext(23, \"Cancel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"button\", 14);\n      i0.ɵɵlistener(\"click\", function AddTaskComponent_Template_button_click_24_listener() {\n        return ctx.addtask();\n      });\n      i0.ɵɵtext(25, \" Add Task \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.formtask);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"#addANote[_ngcontent-%COMP%] {\\r\\n  border: 1px solid rgb(179, 180, 179);\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZGFzaGJvYXJkLXVzZXIvYWRkLXRhc2svYWRkLXRhc2suY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLG9DQUFvQztBQUN0QyIsInNvdXJjZXNDb250ZW50IjpbIiNhZGRBTm90ZSB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDE3OSwgMTgwLCAxNzkpO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AAUnE,OAAM,MAAOC,gBAAgB;EAM3BC,YACSC,SAAyC,EACxCC,EAAe,EACfC,YAAyB;IAF1B,cAAS,GAATF,SAAS;IACR,OAAE,GAAFC,EAAE;IACF,iBAAY,GAAZC,YAAY;EACnB;EAEHC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAC5BC,WAAW,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,CAAC,CAAC;MACxCC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,CAAC,CAAC;MACjCE,MAAM,EAAE,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,CAAC,CAAC;MACnCG,KAAK,EAAE,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAACf,UAAU,CAACU,QAAQ,CAAC;KAC7D,CAAC;EACJ;EACOM,OAAO;IACZ,IAAIC,CAAC,GAAG,IAAI,CAACV,QAAQ,CAACW,KAAK;IAC3B,IAAIC,OAAO,GAAS;MAClBV,WAAW,EAAEQ,CAAC,CAACR,WAAW;MAC1BW,YAAY,EAAEH,CAAC,CAACN,IAAI;MACpBC,MAAM,EAAEK,CAAC,CAACL,MAAM;MAChBC,KAAK,EAAEI,CAAC,CAACJ;KACV;IACD,IAAI,CAACR,YAAY,CAACgB,OAAO,CAACF,OAAO,CAAC,CAACG,SAAS,CAAC,MAAK;MAChDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,QAAQ,CAACW,KAAK,CAAC;IAClC,CAAC,CAAC;EACJ;EACAO,WAAW;IACT,IAAI,CAACtB,SAAS,CAACuB,KAAK,EAAE;EACxB;;AAlCWzB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA,gBAAgB;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX7BC,+BAAoD;MAG5CA,wBAAQ;MAAAA,iBAAK;MAEnBA,8BAAkB;MACWA,gCAAe;MAAAA,iBAAQ;MAClDA,2BAKE;MACJA,iBAAM;MAENA,8BAAiB;MAImCA,uBAAM;MAAAA,iBAAQ;MAC5DA,kCAIC;MAC4CA,kCAAiB;MAAAA,iBAAS;MAK3EA,gCAAwB;MAE0BA,8BAAa;MAAAA,iBAAQ;MACnEA,6BAOE;MACJA,iBAAM;MAIVA,gCAAgE;MAC1BA;QAAA,OAASC,iBAAa;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;MAC3EA,mCAAkE;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAC/DD,2BACF;MAAAA,iBAAS;;;MAjDgBA,wCAAsB","names":["Validators","AddTaskComponent","constructor","dialogRef","fb","taskservices","ngOnInit","formtask","group","description","required","date","status","email","localStorage","getItem","addtask","e","value","eToSave","created_date","addTask","subscribe","console","log","closeDialog","close","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Angular\\To-do-list\\src\\app\\dashboard-user\\add-task\\add-task.component.ts","C:\\Angular\\To-do-list\\src\\app\\dashboard-user\\add-task\\add-task.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Task } from 'src/app/shared/interface/task';\nimport { TaskService } from 'src/app/shared/services/task.service';\n\n@Component({\n  selector: 'app-add-task',\n  templateUrl: './add-task.component.html',\n  styleUrls: ['./add-task.component.css'],\n})\nexport class AddTaskComponent implements OnInit {\n  public task!: Task[];\n  formtask!: FormGroup;\n  description!: string;\n  date!: string;\n  status!: string;\n  constructor(\n    public dialogRef: MatDialogRef<AddTaskComponent>,\n    private fb: FormBuilder,\n    private taskservices: TaskService\n  ) {}\n\n  ngOnInit(): void {\n    this.formtask = this.fb.group({\n      description: ['', [Validators.required]],\n      date: ['', [Validators.required]],\n      status: ['', [Validators.required]],\n      email: [localStorage.getItem('email'), [Validators.required]],\n    });\n  }\n  public addtask(): void {\n    let e = this.formtask.value;\n    let eToSave: Task = {\n      description: e.description,\n      created_date: e.date,\n      status: e.status,\n      email: e.email,\n    };\n    this.taskservices.addTask(eToSave).subscribe(() => {\n      console.log(this.formtask.value);\n    });\n  }\n  closeDialog() {\n    this.dialogRef.close();\n  }\n}\n","<form class=\"mt-4 me-5 ms-5\" [formGroup]=\"formtask\">\n  <!-- 2 column grid layout with text inputs for the first and last names -->\n  <div class=\"form-check d-flex justify-content-center\">\n    <h3>Add Task</h3>\n  </div>\n  <div class=\"mb-4\">\n    <label class=\"form-label\"> Add Description</label>\n    <input\n      type=\"text\"\n      class=\"form-control\"\n      placeholder=\"Task Description...\"\n      formControlName=\"description\"\n    />\n  </div>\n\n  <div class=\"row\">\n    <!-- Email input -->\n    <div class=\"col-5 me-4\">\n      <div class=\"mb-4\">\n        <label class=\"form-label\" for=\"form3Example3\">Status</label>\n        <select\n          formControlName=\"status\"\n          class=\"form-select\"\n          aria-label=\"Default select example\"\n        >\n          <option selected value=\"Still in Progress\">Still in Progress</option>\n        </select>\n      </div>\n    </div>\n    <!-- Password input -->\n    <div class=\"col-5 ms-4\">\n      <div class=\"mb-4\">\n        <label class=\"form-label\" for=\"form3Example3\">Creation_Date</label>\n        <input\n          type=\"date\"\n          id=\"start\"\n          class=\"form-control\"\n          name=\"trip-start\"\n          min=\"2023-02-02\"\n          formControlName=\"date\"\n        />\n      </div>\n    </div>\n  </div>\n  <!-- Checkbox -->\n  <div class=\"form-check d-flex justify-content-center mt-4 mb-2\">\n    <button class=\"btn btn-danger me-4\" (click)=\"closeDialog()\">Cancel</button>\n    <button type=\"submit\" class=\"btn btn-primary\" (click)=\"addtask()\">\n      Add Task\n    </button>\n  </div>\n\n  <!-- Submit button -->\n\n  <!-- Register buttons -->\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}