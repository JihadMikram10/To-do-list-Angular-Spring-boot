{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/services/user.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction InscriptionComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" UserName required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionComponent_span_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" UserName should contains 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Invalid Email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Password should contains 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InscriptionComponent_span_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 34);\n    i0.ɵɵtext(1, \" Password should Start with UpperCaseLetter \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class InscriptionComponent {\n  constructor(userService, fb, router, toastr) {\n    this.userService = userService;\n    this.fb = fb;\n    this.router = router;\n    this.toastr = toastr;\n  }\n  ngOnInit() {\n    this.formUser = this.fb.group({\n      id: ['', []],\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.pattern('^[A-Z][a-zA-Z0-9]*')]]\n    });\n  }\n  addUser() {\n    let e = this.formUser.value;\n    let eToSave = {\n      username: e.username,\n      email: e.email,\n      password: e.password,\n      task: e.task\n    };\n    this.userService.addUser(eToSave).subscribe(() => {}, err => {\n      if (err.status === 200) {\n        this.toastr.success('Register passed succesful');\n        this.formUser.reset();\n        setTimeout(() => {\n          this.router.navigate(['']);\n        }, 1300);\n      } else if (err.status === 409) {\n        this.toastr.error(err.error);\n      }\n    });\n  }\n}\nInscriptionComponent.ɵfac = function InscriptionComponent_Factory(t) {\n  return new (t || InscriptionComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n};\nInscriptionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: InscriptionComponent,\n  selectors: [[\"app-inscription\"]],\n  decls: 57,\n  vars: 7,\n  consts: [[1, \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col\", \"col-xl-10\"], [1, \"card\", 2, \"border-radius\", \"1rem\"], [1, \"row\", \"g-0\"], [1, \"col-md-6\", \"col-lg-5\", \"d-none\", \"d-md-block\", \"mt-3\"], [\"src\", \"https://media.istockphoto.com/id/935062576/vector/clipboard-with-checklist-icon-checklist-complete-tasks-to-do-list-survey-exam-concepts-best.jpg?s=612x612&w=0&k=20&c=qPlo4e75iCkYiRsRBMcLdegZUoIvAzFUCsWWF-EIZnE=\", \"alt\", \"login form\", 1, \"img-fluid\", \"mt-5\", 2, \"border-radius\", \"1rem 0 0 1rem\"], [1, \"col-md-6\", \"col-lg-7\", \"d-flex\", \"align-items-center\"], [1, \"card-body\", \"p-4\", \"p-lg-5\", \"text-black\"], [3, \"formGroup\"], [1, \"d-flex\", \"align-items-center\", \"mb-3\", \"pb-1\"], [1, \"fas\", \"fa-cubes\", \"fa-2x\", \"me-3\", 2, \"color\", \"#5536e2\"], [1, \"h1\", \"fw-bold\", \"mb-0\"], [1, \"fw-normal\", \"mb-3\", \"pb-3\", 2, \"letter-spacing\", \"1px\"], [1, \"form-outline\", \"mb-4\"], [\"type\", \"text\", \"id\", \"form2Example07\", \"formControlName\", \"username\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form2Example07\", 1, \"form-label\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"email\", \"id\", \"form2Example17\", \"formControlName\", \"email\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form2Example17\", 1, \"form-label\"], [\"type\", \"password\", \"id\", \"form2Example27\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"form2Example27\", 1, \"form-label\"], [1, \"pt-1\", \"mb-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"btn-lg\", \"btn-block\", 3, \"disabled\", \"click\"], [1, \"text-center\", \"text-muted\", \"mt-3\", \"mb-2\"], [\"routerLink\", \"/connexion\", 1, \"fw-bold\", \"text-body\"], [1, \"row\", \"p-instruction-register\"], [1, \"col\"], [1, \"text-start\", \"mt-1\", \"fs-6\"], [1, \"text-start\"], [1, \"text-start\", \"mt-1\"], [1, \"text-center\", \"fs-6\"], [1, \"text-center\"], [1, \"text-danger\"]],\n  template: function InscriptionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵelement(7, \"img\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9)(10, \"form\", 10)(11, \"div\", 11);\n      i0.ɵɵelement(12, \"i\", 12);\n      i0.ɵɵelementStart(13, \"span\", 13);\n      i0.ɵɵtext(14, \"To Do\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"h5\", 14);\n      i0.ɵɵtext(16, \" Sign into your account \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"div\", 15);\n      i0.ɵɵelement(18, \"input\", 16);\n      i0.ɵɵelementStart(19, \"label\", 17);\n      i0.ɵɵtext(20, \"UserName\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(21, InscriptionComponent_span_21_Template, 2, 0, \"span\", 18);\n      i0.ɵɵtemplate(22, InscriptionComponent_span_22_Template, 2, 0, \"span\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 15);\n      i0.ɵɵelement(24, \"input\", 19);\n      i0.ɵɵelementStart(25, \"label\", 20);\n      i0.ɵɵtext(26, \"Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, InscriptionComponent_span_27_Template, 2, 0, \"span\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 15);\n      i0.ɵɵelement(29, \"input\", 21);\n      i0.ɵɵelementStart(30, \"label\", 22);\n      i0.ɵɵtext(31, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(32, InscriptionComponent_span_32_Template, 2, 0, \"span\", 18);\n      i0.ɵɵtemplate(33, InscriptionComponent_span_33_Template, 2, 0, \"span\", 18);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"div\", 23)(35, \"button\", 24);\n      i0.ɵɵlistener(\"click\", function InscriptionComponent_Template_button_click_35_listener() {\n        return ctx.addUser();\n      });\n      i0.ɵɵtext(36, \" Sign Up \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(37, \"p\", 25);\n      i0.ɵɵtext(38, \" Have already an account? \");\n      i0.ɵɵelementStart(39, \"a\", 26)(40, \"u\");\n      i0.ɵɵtext(41, \"Login here\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(42, \"div\", 27)(43, \"div\", 28)(44, \"p\", 29);\n      i0.ɵɵtext(45, \" Password must include - \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(46, \"p\", 30);\n      i0.ɵɵtext(47, \"At least 6 characters\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"p\", 30);\n      i0.ɵɵtext(49, \" A mix of upper-case and lower-case characters \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(50, \"p\", 31);\n      i0.ɵɵtext(51, \" 0 special character e.g - !&* \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(52, \"div\", 28)(53, \"p\", 32);\n      i0.ɵɵtext(54, \"UserName must include -\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(55, \"p\", 33);\n      i0.ɵɵtext(56, \"At least 6 characters\");\n      i0.ɵɵelementEnd()()()()()()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(10);\n      i0.ɵɵproperty(\"formGroup\", ctx.formUser);\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.formUser.controls[\"username\"].hasError(\"required\") && ctx.formUser.controls[\"username\"].touched);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formUser.controls[\"username\"].touched && ctx.formUser.controls[\"username\"].hasError(\"minlength\"));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.formUser.controls[\"email\"].invalid && ctx.formUser.controls[\"email\"].touched && ctx.formUser.controls[\"email\"].value);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.formUser.controls[\"password\"].touched && ctx.formUser.controls[\"password\"].hasError(\"minlength\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.formUser.controls[\"password\"].value && ctx.formUser.controls[\"password\"].hasError(\"pattern\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.formUser.invalid);\n    }\n  },\n  dependencies: [i5.NgIf, i3.RouterLink, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\".gradient-custom[_ngcontent-%COMP%] {\\r\\n  \\r\\n  background: #6a11cb;\\r\\n\\r\\n  \\r\\n\\r\\n  \\r\\n  background: linear-gradient(\\r\\n    to right,\\r\\n    rgba(106, 17, 203, 1),\\r\\n    rgba(37, 117, 252, 1)\\r\\n  );\\r\\n}\\r\\n.p-instruction-register[_ngcontent-%COMP%] {\\r\\n  font-size: 12px;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50L2luc2NyaXB0aW9uL2luc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw4QkFBOEI7RUFDOUIsbUJBQW1COztFQUVuQiwrQkFBK0I7O0VBTy9CLHFFQUFxRTtFQUNyRTs7OztHQUlDO0FBQ0g7QUFDQTtFQUNFLGVBQWU7QUFDakIiLCJzb3VyY2VzQ29udGVudCI6WyIuZ3JhZGllbnQtY3VzdG9tIHtcclxuICAvKiBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzICovXHJcbiAgYmFja2dyb3VuZDogIzZhMTFjYjtcclxuXHJcbiAgLyogQ2hyb21lIDEwLTI1LCBTYWZhcmkgNS4xLTYgKi9cclxuICBiYWNrZ3JvdW5kOiAtd2Via2l0LWxpbmVhci1ncmFkaWVudChcclxuICAgIHRvIHJpZ2h0LFxyXG4gICAgcmdiYSgxMDYsIDE3LCAyMDMsIDEpLFxyXG4gICAgcmdiYSgzNywgMTE3LCAyNTIsIDEpXHJcbiAgKTtcclxuXHJcbiAgLyogVzNDLCBJRSAxMCsvIEVkZ2UsIEZpcmVmb3ggMTYrLCBDaHJvbWUgMjYrLCBPcGVyYSAxMissIFNhZmFyaSA3KyAqL1xyXG4gIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChcclxuICAgIHRvIHJpZ2h0LFxyXG4gICAgcmdiYSgxMDYsIDE3LCAyMDMsIDEpLFxyXG4gICAgcmdiYSgzNywgMTE3LCAyNTIsIDEpXHJcbiAgKTtcclxufVxyXG4ucC1pbnN0cnVjdGlvbi1yZWdpc3RlciB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"],\n  data: {\n    animation: []\n  }\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","InscriptionComponent","constructor","userService","fb","router","toastr","ngOnInit","formUser","group","id","username","required","minLength","email","password","pattern","addUser","e","value","eToSave","task","subscribe","err","status","success","reset","setTimeout","navigate","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Angular\\To-do-list\\src\\app\\component\\inscription\\inscription.component.ts","C:\\Angular\\To-do-list\\src\\app\\component\\inscription\\inscription.component.html"],"sourcesContent":["import { HttpErrorResponse, HttpResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { User } from 'src/app/shared/interface/user';\nimport { UserService } from 'src/app/shared/services/user.service';\n\n@Component({\n  selector: 'app-inscription',\n  templateUrl: './inscription.component.html',\n  styleUrls: ['./inscription.component.css'],\n  animations: [],\n})\nexport class InscriptionComponent implements OnInit {\n  public user!: User[];\n  formUser!: FormGroup;\n  username!: string;\n  email!: string;\n  password!: string;\n  constructor(\n    private userService: UserService,\n    private fb: FormBuilder,\n    private router: Router,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.formUser = this.fb.group({\n      id: ['', []],\n      username: ['', [Validators.required, Validators.minLength(6)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(6),\n          Validators.pattern('^[A-Z][a-zA-Z0-9]*'),\n        ],\n      ],\n    });\n  }\n\n  public addUser(): void {\n    let e = this.formUser.value;\n    let eToSave: User = {\n      username: e.username,\n      email: e.email,\n      password: e.password,\n      task: e.task,\n    };\n    this.userService.addUser(eToSave).subscribe(\n      () => {},\n      (err: HttpErrorResponse) => {\n        if (err.status === 200) {\n          this.toastr.success('Register passed succesful');\n          this.formUser.reset();\n          setTimeout(() => {\n            this.router.navigate(['']);\n          }, 1300);\n        } else if (err.status === 409) {\n          this.toastr.error(err.error);\n        }\n      }\n    );\n  }\n}\n","<section class=\"gradient-custom\">\n  <div class=\"container py-5 h-100\">\n    <div class=\"row d-flex justify-content-center align-items-center h-100\">\n      <div class=\"col col-xl-10\">\n        <div class=\"card\" style=\"border-radius: 1rem\">\n          <div class=\"row g-0\">\n            <div class=\"col-md-6 col-lg-5 d-none d-md-block mt-3\">\n              <img\n                src=\"https://media.istockphoto.com/id/935062576/vector/clipboard-with-checklist-icon-checklist-complete-tasks-to-do-list-survey-exam-concepts-best.jpg?s=612x612&w=0&k=20&c=qPlo4e75iCkYiRsRBMcLdegZUoIvAzFUCsWWF-EIZnE=\"\n                alt=\"login form\"\n                class=\"img-fluid mt-5\"\n                style=\"border-radius: 1rem 0 0 1rem\"\n              />\n            </div>\n            <div class=\"col-md-6 col-lg-7 d-flex align-items-center\">\n              <div class=\"card-body p-4 p-lg-5 text-black\">\n                <form [formGroup]=\"formUser\">\n                  <div class=\"d-flex align-items-center mb-3 pb-1\">\n                    <i\n                      class=\"fas fa-cubes fa-2x me-3\"\n                      style=\"color: #5536e2\"\n                    ></i>\n                    <span class=\"h1 fw-bold mb-0\">To Do</span>\n                  </div>\n\n                  <h5 class=\"fw-normal mb-3 pb-3\" style=\"letter-spacing: 1px\">\n                    Sign into your account\n                  </h5>\n\n                  <div class=\"form-outline mb-4\">\n                    <input\n                      type=\"text\"\n                      id=\"form2Example07\"\n                      formControlName=\"username\"\n                      class=\"form-control form-control-lg\"\n                    />\n                    <label class=\"form-label\" for=\"form2Example07\"\n                      >UserName</label\n                    >\n                    <span\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        formUser.controls['username'].hasError('required') &&\n                        formUser.controls['username'].touched\n                      \"\n                    >\n                      UserName required\n                    </span>\n                    <span\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        formUser.controls['username'].touched &&\n                        formUser.controls['username'].hasError('minlength')\n                      \"\n                    >\n                      UserName should contains 6 characters\n                    </span>\n                  </div>\n                  <div class=\"form-outline mb-4\">\n                    <input\n                      type=\"email\"\n                      id=\"form2Example17\"\n                      formControlName=\"email\"\n                      class=\"form-control form-control-lg\"\n                    />\n                    <label class=\"form-label\" for=\"form2Example17\"\n                      >Email\n                    </label>\n                    <span\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        formUser.controls['email'].invalid &&\n                        formUser.controls['email'].touched &&\n                        formUser.controls['email'].value\n                      \"\n                    >\n                      Invalid Email\n                    </span>\n                  </div>\n\n                  <div class=\"form-outline mb-4\">\n                    <input\n                      type=\"password\"\n                      id=\"form2Example27\"\n                      formControlName=\"password\"\n                      class=\"form-control form-control-lg\"\n                    />\n                    <label class=\"form-label\" for=\"form2Example27\"\n                      >Password</label\n                    >\n                    <span\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        formUser.controls['password'].touched &&\n                        formUser.controls['password'].hasError('minlength')\n                      \"\n                    >\n                      Password should contains 6 characters\n                    </span>\n                    <span\n                      class=\"text-danger\"\n                      *ngIf=\"\n                        formUser.controls['password'].value &&\n                        formUser.controls['password'].hasError('pattern')\n                      \"\n                    >\n                      Password should Start with UpperCaseLetter\n                    </span>\n                  </div>\n\n                  <div class=\"pt-1 mb-4\">\n                    <button\n                      class=\"btn btn-primary btn-lg btn-block\"\n                      type=\"button\"\n                      [disabled]=\"formUser.invalid\"\n                      (click)=\"addUser()\"\n                    >\n                      Sign Up\n                    </button>\n                  </div>\n                  <p class=\"text-center text-muted mt-3 mb-2\">\n                    Have already an account?\n                    <a routerLink=\"/connexion\" class=\"fw-bold text-body\"\n                      ><u>Login here</u></a\n                    >\n                  </p>\n                  <div class=\"row p-instruction-register\">\n                    <div class=\"col\">\n                      <p class=\"text-start mt-1 fs-6\">\n                        Password must include -\n                      </p>\n                      <p class=\"text-start\">At least 6 characters</p>\n\n                      <p class=\"text-start\">\n                        A mix of upper-case and lower-case characters\n                      </p>\n                      <p class=\"text-start mt-1\">\n                        0 special character e.g - !&*\n                      </p>\n                    </div>\n                    <div class=\"col\">\n                      <p class=\"text-center fs-6\">UserName must include -</p>\n                      <p class=\"text-center\">At least 6 characters</p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}